apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vr-streaming-ingress
  namespace: vr-streaming
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/websocket-services: "session-management"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.vr-streaming.example.com
    secretName: vr-streaming-tls
  rules:
  - host: api.vr-streaming.example.com
    http:
      paths:
      - path: /api/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 3001
      - path: /api/sessions
        pathType: Prefix
        backend:
          service:
            name: session-management
            port:
              number: 3002
      - path: /api/streaming
        pathType: Prefix
        backend:
          service:
            name: vr-streaming-engine
            port:
              number: 3003
      - path: /socket.io
        pathType: Prefix
        backend:
          service:
            name: session-management
            port:
              number: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: vr-streaming
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    app: nginx-ingress-controller
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
