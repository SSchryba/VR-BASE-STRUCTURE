apiVersion: v1
kind: Namespace
metadata:
  name: vr-streaming
  labels:
    name: vr-streaming
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vr-streaming-config
  namespace: vr-streaming
data:
  REDIS_URL: "redis://redis-service:6379"
  DATABASE_URL: "postgresql://postgres:password@postgres-service:5432/vr_streaming"
  NODE_ENV: "production"
  CORS_ORIGINS: "https://vr-admin.example.com,https://vr-client.example.com"
  MAX_CONCURRENT_SESSIONS: "1000"
  DEFAULT_QUALITY: "2K"
  TARGET_FRAME_RATE: "90"
  GPU_ACCELERATION: "true"
  NVENC_ENABLED: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: vr-streaming-secrets
  namespace: vr-streaming
type: Opaque
data:
  JWT_SECRET: bXktc2VjcmV0LWp3dC1rZXk= # base64 encoded
  POSTGRES_PASSWORD: cGFzc3dvcmQ= # base64 encoded "password"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: vr-streaming
  labels:
    app: auth-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: vr-streaming/auth-service:latest
        ports:
        - containerPort: 3001
        env:
        - name: PORT
          value: "3001"
        envFrom:
        - configMapRef:
            name: vr-streaming-config
        - secretRef:
            name: vr-streaming-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: vr-streaming
spec:
  selector:
    app: auth-service
  ports:
  - protocol: TCP
    port: 3001
    targetPort: 3001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: session-management
  namespace: vr-streaming
  labels:
    app: session-management
spec:
  replicas: 3
  selector:
    matchLabels:
      app: session-management
  template:
    metadata:
      labels:
        app: session-management
    spec:
      containers:
      - name: session-management
        image: vr-streaming/session-management:latest
        ports:
        - containerPort: 3002
        env:
        - name: PORT
          value: "3002"
        envFrom:
        - configMapRef:
            name: vr-streaming-config
        - secretRef:
            name: vr-streaming-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: session-management
  namespace: vr-streaming
spec:
  selector:
    app: session-management
  ports:
  - protocol: TCP
    port: 3002
    targetPort: 3002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vr-streaming-engine
  namespace: vr-streaming
  labels:
    app: vr-streaming-engine
spec:
  replicas: 5
  selector:
    matchLabels:
      app: vr-streaming-engine
  template:
    metadata:
      labels:
        app: vr-streaming-engine
    spec:
      nodeSelector:
        nvidia.com/gpu: "true"
      containers:
      - name: vr-streaming-engine
        image: vr-streaming/vr-streaming-engine:latest
        ports:
        - containerPort: 3003
        env:
        - name: PORT
          value: "3003"
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: vr-streaming-config
        - secretRef:
            name: vr-streaming-secrets
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: vr-streaming-engine
  namespace: vr-streaming
spec:
  selector:
    app: vr-streaming-engine
  ports:
  - protocol: TCP
    port: 3003
    targetPort: 3003
  type: ClusterIP
